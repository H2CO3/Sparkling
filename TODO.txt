TODOs
~~~~~

Code:
	- More documentation									***Urgent***
	- More testing										***Urgent***

	- REFACTOR the VM! (dispatch_loop()'s cases into functions)
		- Do it in a test-driven manner, since it's CRITICAL
			- One instruction a time, exhaustive testing (cover ALL
			  code paths!), before AND after

	- Fix performance bug in hash table whereby searching after a lot of deletions
	  takes quadratic time                                                      DONE
	- grep for "TODO", "FIXME" and "XXX" in the source files
	- add variable names <-> register mapping to debug information
	- expose rich debug info to JavaScript API
	- smarter algorithm in `spn_dbg_get_raw_source_location()` (no linear search)
	- add and interactive debugger function to the standard library

VM:
	- Weak references for deallocating cyclic references

System/integration/installation:
	- invent a (platform-specific) path to store Sparkling library code in
	  (e.g. functional stuff, the current contents of verifyAST.spn, etc.)			DONE


Language, syntax:
	- Permit variable declarations in the condition of 'if' and 'while' statements

	- Implement macros.

	- optimize chained concatenations (x .. y .. z .. foo .. bar ..quirk)
		so that they aren't done in separate steps (as specified by the
		associativity of the .. operator), because creating huge temp
		strings in O(n ^ 2) is wasteful. Instead, these should be somehow
		compiled into one great CONCAT_ALL(x, y, z, foo, bar, quirk)
		instruction (yes, this needs VM support too)

Compiler:
	- support for warnings
	- Issue a warning if a top-level expression (i. e. an expression statement)
		is neither a function call, an assignment nor an increment/decrement
		operation. Nothing else should be used as an expression statement,
		really.
	- Issue a warning when an assignment is used in the condition of an if,
		while, do-while or for statement.

Standard library and other libs:
	- more and better string support
		- Unicode support!
		- Library: e.g. string replacement, pattern searching,
		"has prefix/suffix?" operation, trim leading/trailing whitespace, ...
	- C99 and POSIX-specific extension APIs (in addition to the "standard"
		runtime support library)
		- directory listing ("what files are in directory /X/Y?")
		- permission (chmod) and user+group (chgroup) handling; + get[e]uid(),
		  set[e]uid(), ...
		- better date/time support (date operations; an actual, useful
		  timer object; formatting and parsing)
		- getopt (POSIX and C-style)
		- process management, especially popen(), getpid(), ...
		- thread support
	- functional stuff that requires closure (a la Python's functools)
	- 'require()' and 'dynld()' should search SPN_LIBDIR for modules
	- Bindings for popular and useful C libraries:
		- cURL
		- SQLite3
		- a JSON parser/serializer                                                      done (YAJL)
		- an XML parser/serializer
		- SDL2										done
		- Date/Time/Calendar support via the ICU library
		- compression (zip, tar, gz, ...)
		- PCRE (people apparently love regexes)
		- a UI/widget library (e.g. GTK+)
