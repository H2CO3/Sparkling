/*
 * compiler.h
 * Sparkling, a lightweight C-style scripting language
 *
 * Created by Árpád Goretity on 02/05/2013
 * This file is part of Sparkling.
 *
 * Sparkling is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Sparkling is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Sparkling. If not, see <http://www.gnu.org/licenses/>.
 *
 * AST -> bytecode compiler
 */

#ifndef SPN_COMPILER_H
#define SPN_COMPILER_H

#include <stddef.h>

#include "api.h"
#include "vm.h"
#include "func.h"
#include "parser.h"

/* name of the function containing the top-level program */
#define SPN_TOPFN "<main program>"

/* a compiler object takes an AST and outputs bytecode */
typedef struct SpnCompiler SpnCompiler;

SPN_API SpnCompiler *spn_compiler_new(void);
SPN_API void         spn_compiler_free(SpnCompiler *cmp);

/* returns an SpnFunction on success, NULL on error.
 * If successful, the return value contains the generated bytecode.
 * if 'debug' is non-zero, debugging information will be emitted.
 */
SPN_API SpnFunction *spn_compiler_compile(SpnCompiler *cmp, SpnHashMap *ast, int debug);

/* obtain the most recent error message */
SPN_API	const char  *spn_compiler_errmsg(SpnCompiler *cmp);

/* get the location of the most recent error */
SPN_API SpnSourceLocation spn_compiler_errloc(SpnCompiler *cmp);

#endif /* SPN_COMPILER_H */
